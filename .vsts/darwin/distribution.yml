steps:
  - template: ../common/set-dist-vars.yml
  - template: ./darwin-dependencies.yml
  - template: ../common/download-i18n-artifacts.yml

  - script: |
      pwsh -File "$(System.DefaultWorkingDirectory)/Localize/copy-translations.ps1" -artifactsPath "$(Agent.BuildDirectory)/drop/loc"
    displayName: 'Run copy-translations.ps1 with artifacts path (macOS)'

  - script: |
      pwsh -File "$(System.DefaultWorkingDirectory)/Localize/merge-translations.ps1" -repositoryRoot "$(System.DefaultWorkingDirectory)"
    displayName: 'Run merge-translations.ps1 with artifacts path (macOS)'

  - script: |
      set -e
      . "$(Agent.WorkFolder)/.venv/batchexplorer/bin/activate"
      npm run build:prod
    displayName: Build packages

  - script: |
      set -e
      dir=$(Agent.TempDirectory)
      keychain=$dir/buildagent.keychain
      security create-keychain -p pwd $keychain
      security default-keychain -s $keychain
      security unlock-keychain -p pwd $keychain
      echo "$(apple-developer-certificate)" | base64 -D > $dir/cert.p12
      security import $dir/cert.p12 -k $keychain -P "$(apple-developer-certificate-key)" -T /usr/bin/codesign
      security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k pwd $keychain

      echo "##vso[task.setvariable variable=CSC_LINK]$dir/cert.p12
      echo "##vso[task.setvariable variable=CSC_KEY_PASSWORD]$(apple-developer-certificate-key)
    displayName: Prepare Apple Developer certificate

  - script: |
      set -e
      . "$(Agent.WorkFolder)/.venv/batchexplorer/bin/activate"
      npm run build-python
      npm run package darwin-app
      cd ./release/mac
      zip -y -r ../BatchExplorer-mac.zip ./BatchExplorer.app
      cd ../..
      rm -rf ./release/mac/*.app
      mkdir ./release/keep
      cp ./release/*.zip ./release/keep/before-code-sign.zip
    workingDirectory: desktop
    displayName: Build .app

  - script: |
      set -e
      . "$(Agent.WorkFolder)/.venv/batchexplorer/bin/activate"
      unzip ./release/BatchExplorer*.zip -d ./release/mac
      ls ./release/mac
      rm -f ./release/mac/*.pkg
      npm run package darwin-dmg
      rm -rf ./release/mac/*
    workingDirectory: desktop
    displayName: Build dmg

  - template: ./sign.yml

  - template: ./notarize.yml

  - script: npm run package darwin-manifest
    workingDirectory: desktop
    displayName: Create manifest

  - template: ../common/generate-sbom.yml

  - template: ../common/publish-artifacts.yml
    parameters:
      folder: darwin
