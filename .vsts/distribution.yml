stages:
  - stage: Localization
    jobs:
      - job:
        pool:
          name: Azure-Pipelines-EO-Batch-Explorer
          demands:
          - ImageOverride -equals BatchExplorerBuildImage-Windows
        steps:
          - task: OneLocBuild@2
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
            inputs:
              locProj: 'Localize/LocProject.json'
              outDir: '$(Build.ArtifactStagingDirectory)'
              dependencyPackageSource: 'https://azurebatch.pkgs.visualstudio.com/_packaging/BatchExplorer/nuget/v3/index.json'
              packageSourceAuth: 'patAuth'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

  - stage: Build
    dependsOn: Localization
    condition: succeeded('Localization')
    jobs:
      - job: DownloadArtifacts
        pool:
          name: Azure-Pipelines-EO-Batch-Explorer
          steps:
            - download: current
              artifact: drop

      - job: CopyResjson
        dependsOn: DownloadArtifacts
        pool:
          name: Azure-Pipelines-EO-Batch-Explorer
        variables:
          destPath: '$(Build.SourcesDirectory)'
        steps:
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $resjsonFiles = Get-ChildItem $(Build.ArtifactStagingDirectory)/loc -Filter 'resources.resjson' -Recurse
              foreach ($file in $resjsonFiles) {
                $packageName = $file.Directory.Parent.Name
                $languageCode = $file.Directory.Name
                $i18nDir = "$(packageName)/build/i18n"
                if ($packageName -eq 'desktop') {
                  $i18nDir = 'desktop/build/i18n'
                }
                $destPath = "$(Build.SourcesDirectory)/$i18nDir"
                $destPath = $destPath -replace '/i18n$', ''
                $destPath = $destPath -replace '/resources.resjson$', "/resources.$languageCode.resjson"
                New-Item -ItemType Directory -Path $destPath -Force | Out-Null
                Copy-Item -Path $file.FullName -Destination $destPath -Force
              }
          displayName: 'Copy resjson files to build directory'

      - job: Linux
        dependsOn: CopyResjson
        pool:
          name: Azure-Pipelines-EO-Batch-Explorer
          demands:
          - ImageOverride -equals BatchExplorerBuildImage-Linux
        steps:
        - template: ./linux/distribution.yml

      - job: MacOS
        dependsOn: CopyResjson
        pool:
          vmImage: macOS-11
          demands: xcode
        variables:
          - name: EOCompliance-Mac
            value: true
        steps:
          - template: ./darwin/distribution.yml

      - job: Windows
        dependsOn: CopyResjson
        pool:
          name: Azure-Pipelines-EO-Batch-Explorer
          demands:
          - ImageOverride -equals BatchExplorerBuildImage-Windows
        steps:
          - template: ./win/distribution.yml
