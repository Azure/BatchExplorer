name: $(SourceBranch)$(Rev:.r)
phases:
  - phase: Linux
    queue: Hosted Linux Preview
    steps:
    - script: |
        set -e
        apt-get update
        apt-get install -y libxkbfile-dev pkg-config libsecret-1-dev libxss1 libgconf-2-4 dbus xvfb libgtk-3-0 rpm
      displayName: Install Linux packages
    - template: ./dependencies.yml
    - template: ./pyenv.yml
    - script: |
        set -e
        python --version
        npm install -g codecov
        npm install -g npm
        npm ci
        pip3 install -r python/requirements.txt
      displayName: Install dependencies

    - script: |
        export DISPLAY=:99
        xvfb-run npm run test
      displayName: Run tests

    - task: PublishTestResults@2
      inputs:
        testRunner: 'JUnit'
        testResultsFiles: $(System.DefaultWorkingDirectory)/coverage/TESTS*.xml

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura.xml
        reportDirectory: $(System.DefaultWorkingDirectory)/coverage/html
    - script: codecov -t $(codecov.uploadToken)
      displayName: Upload code coverage to codecov

    - script: npm run build-and-pack
      displayName: Build and pack

    - script: npm run lint
      displayName: Lint

    - task: PublishBuildArtifacts@1
      displayName: Publish artifacts
      inputs:
        pathtoPublish: ./release
        artifactName: linux
        artifactType: Container

  # Mac os build
  - phase: macOS
    queue: Hosted macOS Preview
    steps:
    - template: ./dependencies.yml
    - script: npm config set python $(which python)
      displayName: Set npm python2 path
    - template: ./pyenv.yml
    - script: |
        set -e
        node --version
        npm config list
        npm install -g npm@latest
        npm --version
        npm install
        pip install -r python/requirements.txt
      displayName: Install dependencies

    - script: npm run build-and-pack
      displayName: Build and pack

    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      inputs:
        ConnectedServiceName: 'ESRP CodeSign'
        FolderPath: ./release
        Pattern: 'BatchExplorer-*-mac.zip'
        signConfigType: inlineSignParams
        inlineOperation: |
          [
            {
              "keyCode": "CP-401337-Apple",
              "operationSetCode": "MacAppDeveloperSign",
              "parameters": [ ],
              "toolName": "sign",
              "toolVersion": "1.0"
            }
          ]
        SessionTimeout: 120
      displayName: Codesign

    - task: PublishBuildArtifacts@1
      displayName: Publish artifacts
      inputs:
        pathtoPublish: ./release
        artifactName: osx
        artifactType: Container

  - phase: Windows
    queue: Hosted VS2017
    steps:
      - template: ./dependencies.yml
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.6.x'
      - powershell: |
          node --version
          npm install -g npm
          npm ci
          pip install -r python/requirements.txt
        displayName: Install dependencies

      - powershell: |
          npm run -s build:prod
          npm run -s build-python
          npm run -s package -- --win --dir
        displayName: Build executable

      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        inputs:
          ConnectedServiceName: 'ESRP CodeSign'
          FolderPath: ./release
          Pattern: '*.exe,*.dll,!python36.dll'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                  "keyCode": "CP-230012",
                  "operationSetCode": "SigntoolSign",
                  "parameters": [
                  {
                      "parameterName": "OpusName",
                      "parameterValue": "Microsoft"
                  },
                  {
                      "parameterName": "OpusInfo",
                      "parameterValue": "http://www.microsoft.com"
                  },
                  {
                      "parameterName": "PageHash",
                      "parameterValue": "/NPH"
                  },
                  {
                      "parameterName": "TimeStamp",
                      "parameterValue": "/t \"http://ts4096.gtm.microsoft.com/TSS/AuthenticodeTS\""
                  }
                  ],
                  "toolName": "sign",
                  "toolVersion": "1.0"
              },
              {
                  "keyCode": "CP-230012",
                  "operationSetCode": "SigntoolVerify",
                  "parameters": [ ],
                  "toolName": "sign",
                  "toolVersion": "1.0"
              }
            ]
          SessionTimeout: 120
      - powershell: npm run -s package -- --prepackaged ./release/win-unpacked --projectDir . --win nsis zip
        displayName: Build installer

      - task: PublishBuildArtifacts@1
        displayName: Publish artifacts
        inputs:
          pathtoPublish: ./release
          artifactName: windows
          artifactType: Container
