{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "pool",
  "description": "An Azure Batch pool",
  "type": "object",
  "$ref": "#/definitions/PoolAddParameter",
  "definitions": {
    "PoolAddParameter": {
      "properties": {
        "id": {
          "type": "string",
          "title": "A string that uniquely identifies the pool within the account.",
          "description": "A string that uniquely identifies the pool within the account."
        },
        "displayName": {
          "type": "string",
          "title": "The display name for the pool.",
          "description": "The display name for the pool."
        },
        "vmSize": {
          "type": "string",
          "title": "The size of virtual machines in the pool. All virtual machines in a pool are the same size.",
          "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size."
        },
        "cloudServiceConfiguration": {
          "$ref": "#/definitions/CloudServiceConfiguration",
          "title": "The cloud service configuration for the pool.",
          "description": "The cloud service configuration for the pool."
        },
        "virtualMachineConfiguration": {
          "$ref": "#/definitions/VirtualMachineConfiguration",
          "title": "The virtual machine configuration for the pool.",
          "description": "The virtual machine configuration for the pool."
        },
        "resizeTimeout": {
          "type": "string",
          "format": "duration",
          "title": "The timeout for allocation of compute nodes to the pool.",
          "description": "The timeout for allocation of compute nodes to the pool."
        },
        "targetDedicatedNodes": {
          "type": "integer",
          "format": "int32",
          "title": "The desired number of dedicated compute nodes in the pool.",
          "description": "The desired number of dedicated compute nodes in the pool."
        },
        "targetLowPriorityNodes": {
          "type": "integer",
          "format": "int32",
          "title": "The desired number of low-priority compute nodes in the pool.",
          "description": "The desired number of low-priority compute nodes in the pool."
        },
        "enableAutoScale": {
          "type": "boolean",
          "title": "Whether the pool size should automatically adjust over time.",
          "description": "Whether the pool size should automatically adjust over time."
        },
        "autoScaleFormula": {
          "type": "string",
          "title": "A formula for the desired number of compute nodes in the pool.",
          "description": "A formula for the desired number of compute nodes in the pool."
        },
        "autoScaleEvaluationInterval": {
          "type": "string",
          "format": "duration",
          "title": "The time interval at which to automatically adjust the pool size according to the autoscale formula.",
          "description": "The time interval at which to automatically adjust the pool size according to the autoscale formula."
        },
        "enableInterNodeCommunication": {
          "type": "boolean",
          "title": "Whether the pool permits direct communication between nodes.",
          "description": "Whether the pool permits direct communication between nodes."
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration",
          "title": "The network configuration for the pool.",
          "description": "The network configuration for the pool."
        },
        "startTask": {
          "$ref": "#/definitions/StartTask",
          "title": "A task specified to run on each compute node as it joins the pool.",
          "description": "A task specified to run on each compute node as it joins the pool."
        },
        "certificateReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CertificateReference"
          },
          "title": "The list of certificates to be installed on each compute node in the pool.",
          "description": "The list of certificates to be installed on each compute node in the pool."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "title": "The list of application packages to be installed on each compute node in the pool.",
          "description": "The list of application packages to be installed on each compute node in the pool."
        },
        "applicationLicenses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of application licenses the Batch service will make available on each compute node in the pool.",
          "description": "The list of application licenses the Batch service will make available on each compute node in the pool."
        },
        "maxTasksPerNode": {
          "type": "integer",
          "format": "int32",
          "title": "The maximum number of tasks that can run concurrently on a single compute node in the pool.",
          "description": "The maximum number of tasks that can run concurrently on a single compute node in the pool."
        },
        "taskSchedulingPolicy": {
          "$ref": "#/definitions/TaskSchedulingPolicy",
          "title": "How tasks are distributed across compute nodes in a pool.",
          "description": "How tasks are distributed across compute nodes in a pool."
        },
        "userAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAccount"
          },
          "title": "The list of user accounts to be created on each node in the pool.",
          "description": "The list of user accounts to be created on each node in the pool."
        },
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataItem"
          },
          "title": "A list of name-value pairs associated with the pool as metadata.",
          "description": "A list of name-value pairs associated with the pool as metadata."
        },
        "packageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageReference"
          },
          "title": "A collection of packages to be added from external package managers to each node in the pool.",
          "description": "A collection of packages to be added from external package managers to each node in the pool."
        }
      },
      "required": [
        "id",
        "vmSize"
      ],
      "title": "A pool in the Azure Batch service to add.",
      "oneOf": [
        {
          "required": [
            "cloudServiceConfiguration"
          ]
        },
        {
          "required": [
            "virtualMachineConfiguration"
          ]
        }
      ],
      "dependencies": {
        "autoScaleFormula": [
          "enableAutoScale"
        ],
        "autoScaleEvaluationInterval": [
          "enableAutoScale"
        ]
      }
    },
    "CloudServiceConfiguration": {
      "properties": {
        "osFamily": {
          "type": "string",
          "title": "The Azure Guest OS family to be installed on the virtual machines in the pool.",
          "description": "The Azure Guest OS family to be installed on the virtual machines in the pool."
        },
        "targetOSVersion": {
          "type": "string",
          "title": "The Azure Guest OS version to be installed on the virtual machines in the pool.",
          "description": "The Azure Guest OS version to be installed on the virtual machines in the pool."
        },
        "currentOSVersion": {
          "type": "string",
          "readOnly": true,
          "title": "The Azure Guest OS Version currently installed on the virtual machines in the pool.",
          "description": "The Azure Guest OS Version currently installed on the virtual machines in the pool."
        }
      },
      "required": [
        "osFamily"
      ],
      "title": "The configuration for nodes in a pool based on the Azure Cloud Services platform."
    },
    "VirtualMachineConfiguration": {
      "properties": {
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "title": "A reference to the Azure Virtual Machines Marketplace image or the custom Virtual Machine image to use.",
          "description": "A reference to the Azure Virtual Machines Marketplace image or the custom Virtual Machine image to use."
        },
        "osDisk": {
          "$ref": "#/definitions/OSDisk",
          "title": "Settings for the operating system disk of the Virtual Machine.",
          "description": "Settings for the operating system disk of the Virtual Machine."
        },
        "nodeAgentSKUId": {
          "type": "string",
          "title": "The SKU of the Batch node agent to be provisioned on compute nodes in the pool.",
          "description": "The SKU of the Batch node agent to be provisioned on compute nodes in the pool."
        },
        "windowsConfiguration": {
          "$ref": "#/definitions/WindowsConfiguration",
          "title": "Windows operating system settings on the virtual machine.",
          "description": "Windows operating system settings on the virtual machine."
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataDisk"
          },
          "title": "The configuration for data disks attached to the comptue nodes in the pool.",
          "description": "The configuration for data disks attached to the comptue nodes in the pool."
        },
        "licenseType": {
          "type": "string",
          "title": "The type of on-premises license to be used when deploying the operating system.",
          "description": "The type of on-premises license to be used when deploying the operating system."
        },
        "containerConfiguration": {
          "$ref": "#/definitions/ContainerConfiguration",
          "title": "The container configuration for the pool.",
          "description": "The container configuration for the pool."
        }
      },
      "required": [
        "nodeAgentSKUId",
        "imageReference"
      ],
      "title": "The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.",
      "oneOf": [
        {
          "required": [
            "imageReference"
          ]
        },
        {
          "required": [
            "osDisk"
          ]
        }
      ]
    },
    "ImageReference": {
      "properties": {
        "publisher": {
          "type": "string",
          "title": "The publisher of the Azure Virtual Machines Marketplace image.",
          "description": "The publisher of the Azure Virtual Machines Marketplace image."
        },
        "offer": {
          "type": "string",
          "title": "The offer type of the Azure Virtual Machines Marketplace image.",
          "description": "The offer type of the Azure Virtual Machines Marketplace image."
        },
        "sku": {
          "type": "string",
          "title": "The SKU of the Azure Virtual Machines Marketplace image.",
          "description": "The SKU of the Azure Virtual Machines Marketplace image."
        },
        "version": {
          "type": "string",
          "title": "The version of the Azure Virtual Machines Marketplace image.",
          "description": "The version of the Azure Virtual Machines Marketplace image."
        },
        "virtualMachineImageId": {
          "type": "string",
          "title": "The ARM resource identifier of the virtual machine image. Computes nodes of the pool will be created using this custom image. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}",
          "description": "The ARM resource identifier of the virtual machine image. Computes nodes of the pool will be created using this custom image. This is of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}"
        }
      },
      "title": "A reference to an Azure Virtual Machines Marketplace image or a custom Azure Virtual Machine image. To get the list of all Azure Marketplace image references verified by Azure Batch, see the 'List node agent SKUs' operation."
    },
    "OSDisk": {
      "properties": {
        "caching": {
          "title": "The type of caching to enable for the OS disk.",
          "description": "The type of caching to enable for the OS disk.",
          "$ref": "#/definitions/CachingType"
        }
      },
      "title": "Settings for the operating system disk of the virtual machine."
    },
    "CachingType": {
      "type": "string",
      "title": "The type of caching to enable for the disk.",
      "description": "The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.",
      "enum": [
        "none",
        "readonly",
        "readwrite"
      ],
      "x-ms-enum": {
        "name": "CachingType",
        "modelAsString": false,
        "values": [
          {
            "value": "none",
            "description": "The caching mode for the disk is not enabled."
          },
          {
            "value": "readonly",
            "description": "The caching mode for the disk is read only.",
            "name": "readOnly"
          },
          {
            "value": "readwrite",
            "description": "The caching mode for the disk is read and write.",
            "name": "readWrite"
          }
        ]
      }
    },
    "WindowsConfiguration": {
      "properties": {
        "enableAutomaticUpdates": {
          "type": "boolean",
          "title": "Whether automatic updates are enabled on the virtual machine.",
          "description": "Whether automatic updates are enabled on the virtual machine."
        }
      },
      "title": "Windows operating system settings to apply to the virtual machine."
    },
    "DataDisk": {
      "properties": {
        "lun": {
          "type": "integer",
          "format": "int32",
          "title": "The logical unit number.",
          "description": "The logical unit number."
        },
        "caching": {
          "$ref": "#/definitions/CachingType",
          "title": "The type of caching to be enabled for the data disks.",
          "description": "The type of caching to be enabled for the data disks."
        },
        "diskSizeGB": {
          "type": "integer",
          "format": "int32",
          "title": "The initial disk size in gigabytes.",
          "description": "The initial disk size in gigabytes."
        },
        "storageAccountType": {
          "title": "The storage account type to be used for the data disk.",
          "description": "The storage account type to be used for the data disk.",
          "$ref": "#/definitions/StorageAccountType"
        }
      },
      "required": [
        "lun",
        "diskSizeGB"
      ],
      "title": "Settings which will be used by the data disks associated to compute nodes in the pool."
    },
    "StorageAccountType": {
      "type": "string",
      "title": "The storage account type for use in creating data disks.",
      "enum": [
        "standard_lrs",
        "premium_lrs"
      ],
      "x-ms-enum": {
        "name": "StorageAccountType",
        "modelAsString": false,
        "values": [
          {
            "value": "standard_lrs",
            "description": "The data disk should use standard locally redundant storage.",
            "name": "StandardLRS"
          },
          {
            "value": "premium_lrs",
            "description": "The data disk should use premium locally redundant storage.",
            "name": "PremiumLRS"
          }
        ]
      }
    },
    "ContainerConfiguration": {
      "properties": {
        "type": {
          "type": "string",
          "title": "The container technology to be used.",
          "enum": [
            "dockerCompatible"
          ],
          "x-ms-enum": {
            "name": "ContainerType",
            "modelAsString": false,
            "values": [
              {
                "value": "dockerCompatible",
                "description": "Docker will be used to launch the containers."
              }
            ]
          },
          "description": "The container technology to be used."
        },
        "containerImageNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The collection of container image names.",
          "description": "The collection of container image names."
        },
        "containerRegistries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerRegistry"
          },
          "title": "Additional private registries from which containers can be pulled.",
          "description": "Additional private registries from which containers can be pulled."
        }
      },
      "required": [
        "type"
      ],
      "title": "The configuration for container-enabled pools."
    },
    "ContainerRegistry": {
      "properties": {
        "registryServer": {
          "type": "string",
          "title": "The registry URL.",
          "description": "The registry URL."
        },
        "username": {
          "type": "string",
          "x-ms-client-name": "username",
          "title": "The user name to log into the registry server.",
          "description": "The user name to log into the registry server."
        },
        "password": {
          "type": "string",
          "title": "The password to log into the registry server.",
          "description": "The password to log into the registry server."
        }
      },
      "required": [
        "username",
        "password"
      ],
      "title": "A private container registry."
    },
    "NetworkConfiguration": {
      "properties": {
        "subnetId": {
          "type": "string",
          "title": "The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.",
          "description": "The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. This is of the form /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.",
          "externalDocs": {
            "url": "https://azure.microsoft.com/en-us/documentation/articles/role-based-access-built-in-roles/#classic-virtual-machine-contributor",
            "description": "Setting up RBAC for Azure Batch VNETs"
          }
        },
        "endpointConfiguration": {
          "$ref": "#/definitions/PoolEndpointConfiguration",
          "title": "The configuration for endpoints on compute nodes in the Batch pool.",
          "description": "The configuration for endpoints on compute nodes in the Batch pool."
        }
      },
      "description": "The network configuration for a pool."
    },
    "PoolEndpointConfiguration": {
      "properties": {
        "inboundNATPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundNATPool"
          },
          "title": "A list of inbound NAT pools that can be used to address specific ports on an individual compute node externally.",
          "description": "A list of inbound NAT pools that can be used to address specific ports on an individual compute node externally."
        }
      },
      "required": [
        "inboundNATPools"
      ],
      "title": "The endpoint configuration for a pool."
    },
    "InboundNATPool": {
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the endpoint.",
          "description": "The name of the endpoint."
        },
        "protocol": {
          "$ref": "#/definitions/InboundEndpointProtocol",
          "title": "The protocol of the endpoint.",
          "description": "The protocol of the endpoint."
        },
        "backendPort": {
          "type": "integer",
          "format": "int32",
          "title": "The port number on the compute node.",
          "description": "The port number on the compute node."
        },
        "frontendPortRangeStart": {
          "type": "integer",
          "format": "int32",
          "title": "The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.",
          "description": "The first port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes."
        },
        "frontendPortRangeEnd": {
          "type": "integer",
          "format": "int32",
          "title": "The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes.",
          "description": "The last port number in the range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes."
        },
        "networkSecurityGroupRules": {
          "type": "array",
          "title": "A list of network security group rules that will be applied to the endpoint.",
          "description": "A list of network security group rules that will be applied to the endpoint.",
          "items": {
            "$ref": "#/definitions/NetworkSecurityGroupRule"
          }
        }
      },
      "required": [
        "name",
        "protocol",
        "backendPort",
        "frontendPortRangeStart",
        "frontendPortRangeEnd"
      ],
      "title": "A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally."
    },
    "InboundEndpointProtocol": {
      "type": "string",
      "title": "The protocol of the endpoint.",
      "enum": [
        "tcp",
        "udp"
      ],
      "x-ms-enum": {
        "name": "InboundEndpointProtocol",
        "modelAsString": false,
        "values": [
          {
            "value": "tcp",
            "description": "Use TCP for the endpoint.",
            "name": "tcp"
          },
          {
            "value": "udp",
            "description": "Use UDP for the endpoint.",
            "name": "udp"
          }
        ]
      }
    },
    "NetworkSecurityGroupRule": {
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "title": "The priority for this rule.",
          "description": "The priority for this rule."
        },
        "access": {
          "type": "string",
          "title": "The action that should be taken for a specified IP address, subnet range or tag.",
          "enum": [
            "allow",
            "deny"
          ],
          "x-ms-enum": {
            "name": "NetworkSecurityGroupRuleAccess",
            "modelAsString": false,
            "values": [
              {
                "value": "allow",
                "description": "Allow access."
              },
              {
                "value": "deny",
                "description": "Deny access."
              }
            ]
          },
          "description": "The action that should be taken for a specified IP address, subnet range or tag."
        },
        "sourceAddressPrefix": {
          "type": "string",
          "title": "The source address prefix or tag to match for the rule.",
          "description": "The source address prefix or tag to match for the rule."
        }
      },
      "required": [
        "priority",
        "access",
        "sourceAddressPrefix"
      ],
      "title": "A network security group rule to apply to an inbound endpoint."
    },
    "StartTask": {
      "properties": {
        "commandLine": {
          "type": "string",
          "title": "The command line of the start task.",
          "description": "The command line of the start task."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettings",
          "title": "The settings for the container under which the start task runs.",
          "description": "The settings for the container under which the start task runs."
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "title": "A list of files that the Batch service will download to the compute node before running the command line.",
          "description": "A list of files that the Batch service will download to the compute node before running the command line."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "title": "A list of environment variable settings for the start task.",
          "description": "A list of environment variable settings for the start task."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "title": "The user identity under which the start task runs.",
          "description": "The user identity under which the start task runs."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "title": "The maximum number of times the task may be retried.",
          "description": "The maximum number of times the task may be retried."
        },
        "waitForSuccess": {
          "type": "boolean",
          "title": "Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.",
          "description": "Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node."
        }
      },
      "required": [
        "commandLine"
      ],
      "title": "A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged."
    },
    "TaskContainerSettings": {
      "properties": {
        "containerRunOptions": {
          "type": "string",
          "title": "Additional options to the container create command.",
          "description": "Additional options to the container create command."
        },
        "imageName": {
          "type": "string",
          "title": "The image to use to create the container in which the task will run.",
          "description": "The image to use to create the container in which the task will run."
        },
        "registry": {
          "$ref": "#/definitions/ContainerRegistry",
          "title": "The private registry which contains the container image.",
          "description": "The private registry which contains the container image."
        }
      },
      "required": [
        "imageName"
      ],
      "title": "The container settings for a task."
    },
    "ResourceFile": {
      "properties": {
        "blobSource": {
          "type": "string",
          "title": "The URL of the file within Azure Blob Storage.",
          "description": "The URL of the file within Azure Blob Storage."
        },
        "filePath": {
          "type": "string",
          "title": "The location on the compute node to which to download the file, relative to the task's working directory.",
          "description": "The location on the compute node to which to download the file, relative to the task's working directory."
        },
        "fileMode": {
          "type": "string",
          "title": "The file permission mode attribute in octal format.",
          "description": "The file permission mode attribute in octal format."
        },
        "source": {
          "type": "object",
          "$ref": "#/definitions/ResourceFileSource",
          "title": "A source for files to be downloaded before running the task command line.",
          "description": "A source for files to be downloaded before running the task command line."
        }
      },
      "required": [],
      "title": "A file to be downloaded from Azure blob storage to a compute node.",
      "oneOf": [
        {
          "required": [
            "source"
          ]
        },
        {
          "required": [
            "blobSource"
          ]
        }
      ]
    },
    "ResourceFileSource": {
      "properties": {
        "fileGroup": {
          "type": "string",
          "title": "The file group in the linked storage account from which to download files.",
          "description": "The file group in the linked storage account from which to download files."
        },
        "prefix": {
          "type": "string",
          "title": "A prefix with which to filter the files to download.",
          "description": "A prefix with which to filter the files to download."
        }
      },
      "required": [
        "fileGroup"
      ]
    },
    "EnvironmentSetting": {
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the environment variable.",
          "description": "The name of the environment variable."
        },
        "value": {
          "type": "string",
          "title": "The value of the environment variable.",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "name"
      ],
      "title": "An environment variable to be set on a task process."
    },
    "UserIdentity": {
      "properties": {
        "username": {
          "type": "string",
          "x-ms-client-name": "username",
          "title": "The name of the user identity under which the task is run.",
          "description": "The name of the user identity under which the task is run."
        },
        "autoUser": {
          "$ref": "#/definitions/AutoUserSpecification",
          "title": "The auto user under which the task is run.",
          "description": "The auto user under which the task is run."
        }
      },
      "title": "The definition of the user identity under which the task is run.",
      "description": "Specify either the username or autoUser property, but not both."
    },
    "AutoUserSpecification": {
      "properties": {
        "scope": {
          "type": "string",
          "title": "The scope for the auto user",
          "description": "The scope for the auto user",
          "enum": [
            "task",
            "pool"
          ],
          "x-ms-enum": {
            "name": "AutoUserScope",
            "modelAsString": false,
            "values": [
              {
                "value": "task",
                "description": "Specifies that the service should create a new user for the task."
              },
              {
                "value": "pool",
                "description": "Specifies that the task runs as the common auto user account which is created on every node in a pool."
              }
            ]
          }
        },
        "elevationLevel": {
          "title": "The elevation level of the auto user.",
          "description": "The elevation level of the auto user.",
          "$ref": "#/definitions/ElevationLevel"
        }
      },
      "title": "Specifies the parameters for the auto user that runs a task on the Batch service."
    },
    "ElevationLevel": {
      "type": "string",
      "title": "The elevation level of the user.",
      "enum": [
        "nonadmin",
        "admin"
      ],
      "x-ms-enum": {
        "name": "ElevationLevel",
        "modelAsString": false,
        "values": [
          {
            "value": "nonadmin",
            "description": "The user is a standard user without elevated access.",
            "name": "nonAdmin"
          },
          {
            "value": "admin",
            "description": "The user is a user with elevated access and operates with full Administrator permissions."
          }
        ]
      }
    },
    "CertificateReference": {
      "properties": {
        "thumbprint": {
          "type": "string",
          "title": "The thumbprint of the certificate.",
          "description": "The thumbprint of the certificate."
        },
        "thumbprintAlgorithm": {
          "type": "string",
          "title": "The algorithm with which the thumbprint is associated. This must be sha1.",
          "description": "The algorithm with which the thumbprint is associated. This must be sha1."
        },
        "storeLocation": {
          "type": "string",
          "title": "The location of the certificate store on the compute node into which to install the certificate.",
          "description": "The location of the certificate store on the compute node into which to install the certificate.",
          "enum": [
            "currentuser",
            "localmachine"
          ],
          "x-ms-enum": {
            "name": "CertificateStoreLocation",
            "modelAsString": false,
            "values": [
              {
                "value": "currentuser",
                "description": "Certificates should be installed to the CurrentUser certificate store.",
                "name": "currentUser"
              },
              {
                "value": "localmachine",
                "description": "Certificates should be installed to the LocalMachine certificate store.",
                "name": "localMachine"
              }
            ]
          }
        },
        "storeName": {
          "type": "string",
          "title": "The name of the certificate store on the compute node into which to install the certificate.",
          "description": "The name of the certificate store on the compute node into which to install the certificate."
        },
        "visibility": {
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": false,
            "enum": [
              "starttask",
              "task",
              "remoteuser"
            ],
            "x-ms-enum": {
              "name": "CertificateVisibility",
              "modelAsString": false,
              "values": [
                {
                  "value": "starttask",
                  "description": "The certificate should be visible to the user account under which the start task is run.",
                  "name": "startTask"
                },
                {
                  "value": "task",
                  "description": "The certificate should be visibile to the user accounts under which job tasks are run."
                },
                {
                  "value": "remoteuser",
                  "description": "The certificate should be visibile to the user accounts under which users remotely access the node.",
                  "name": "remoteUser"
                }
              ]
            }
          },
          "title": "Which user accounts on the compute node should have access to the private data of the certificate.",
          "description": "Which user accounts on the compute node should have access to the private data of the certificate."
        }
      },
      "required": [
        "thumbprint",
        "thumbprintAlgorithm"
      ],
      "title": "A reference to a certificate to be installed on compute nodes in a pool."
    },
    "ApplicationPackageReference": {
      "properties": {
        "applicationId": {
          "type": "string",
          "title": "The ID of the application to deploy.",
          "description": "The ID of the application to deploy."
        },
        "version": {
          "type": "string",
          "title": "The version of the application to deploy. If omitted, the default version is deployed.",
          "description": "The version of the application to deploy. If omitted, the default version is deployed."
        }
      },
      "required": [
        "applicationId"
      ],
      "title": "A reference to an application package to be deployed to compute nodes."
    },
    "TaskSchedulingPolicy": {
      "properties": {
        "nodeFillType": {
          "type": "string",
          "title": "How tasks are distributed across compute nodes in a pool.",
          "enum": [
            "spread",
            "pack"
          ],
          "x-ms-enum": {
            "name": "ComputeNodeFillType",
            "modelAsString": false,
            "values": [
              {
                "value": "spread",
                "description": "Tasks should be assigned evenly across all nodes in the pool."
              },
              {
                "value": "pack",
                "description": "As many tasks as possible (maxTasksPerNode) should be assigned to each node in the pool before any tasks are assigned to the next node in the pool."
              }
            ]
          },
          "description": "How tasks are distributed across compute nodes in a pool."
        }
      },
      "required": [
        "nodeFillType"
      ],
      "title": "Specifies how tasks should be distributed across compute nodes."
    },
    "UserAccount": {
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the user account.",
          "description": "The name of the user account."
        },
        "password": {
          "type": "string",
          "title": "The password for the user account.",
          "description": "The password for the user account."
        },
        "elevationLevel": {
          "title": "The elevation level of the user account.",
          "description": "The elevation level of the user account.",
          "$ref": "#/definitions/ElevationLevel"
        },
        "linuxUserConfiguration": {
          "title": "The Linux-specific user configuration for the user account.",
          "description": "The Linux-specific user configuration for the user account.",
          "$ref": "#/definitions/LinuxUserConfiguration"
        }
      },
      "required": [
        "name",
        "password"
      ],
      "title": "Properties used to create a user used to execute tasks on an Azure Batch node."
    },
    "LinuxUserConfiguration": {
      "properties": {
        "uid": {
          "type": "integer",
          "format": "int32",
          "title": "The user ID of the user account.",
          "description": "The user ID of the user account."
        },
        "gid": {
          "type": "integer",
          "format": "int32",
          "title": "The group ID for the user account.",
          "description": "The group ID for the user account."
        },
        "sshPrivateKey": {
          "type": "string",
          "title": "The SSH private key for the user account.",
          "description": "The SSH private key for the user account."
        }
      },
      "title": "Properties used to create a user account on a Linux node."
    },
    "MetadataItem": {
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the metadata item.",
          "description": "The name of the metadata item."
        },
        "value": {
          "type": "string",
          "title": "The value of the metadata item.",
          "description": "The value of the metadata item."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "title": "A name-value pair associated with a Batch service resource.",
      "description": "The Batch service does not assign any meaning to this metadata; it is solely for the use of user code."
    },
    "PackageReference": {
      "properties": {
        "type": {
          "type": "string",
          "title": "The type of package - aptPackage, chocolateyPackage, or yumPackage",
          "description": "The type of package - aptPackage, chocolateyPackage, or yumPackage"
        },
        "id": {
          "type": "string",
          "title": "The name or ID of the package to be installed as identified according to the package repository.",
          "description": "The name or ID of the package to be installed as identified according to the package repository."
        },
        "version": {
          "type": "string",
          "title": "The version of the package to be installed.",
          "description": "The version of the package to be installed."
        },
        "allowEmptyChecksums": {
          "type": "boolean",
          "title": "Whether Chocolatey will install packages without a checksum for validation.",
          "description": "Whether Chocolatey will install packages without a checksum for validation."
        },
        "disableExcludes": {
          "type": "string",
          "title": "Packages that might otherwise be excluded by VM configuration (e.g. kernel packages).",
          "description": "Packages that might otherwise be excluded by VM configuration (e.g. kernel packages)."
        }
      },
      "required": [
        "type",
        "id"
      ]
    }
  }
}
