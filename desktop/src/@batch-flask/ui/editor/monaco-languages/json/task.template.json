{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "task",
  "description": "An Azure Batch task",
  "type": "object",
  "$ref": "#/definitions/TaskAddParameter",
  "definitions": {
    "TaskAddParameter": {
      "properties": {
        "id": {
          "type": "string",
          "title": "A string that uniquely identifies the task within the job.",
          "description": "A string that uniquely identifies the task within the job."
        },
        "displayName": {
          "type": "string",
          "title": "A display name for the task.",
          "description": "A display name for the task."
        },
        "commandLine": {
          "type": "string",
          "title": "The command line of the task.",
          "description": "The command line of the task."
        },
        "containerSettings": {
          "$ref": "#/definitions/TaskContainerSettings",
          "title": "The settings for the container under which the task runs.",
          "description": "The settings for the container under which the task runs."
        },
        "exitConditions": {
          "$ref": "#/definitions/ExitConditions"
        },
        "resourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "title": "A list of files that the Batch service will download to the compute node before running the command line.",
          "description": "A list of files that the Batch service will download to the compute node before running the command line."
        },
        "outputFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutputFile"
          },
          "title": "A list of files that the Batch service will upload from the compute node after running the command line.",
          "description": "A list of files that the Batch service will upload from the compute node after running the command line."
        },
        "environmentSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentSetting"
          },
          "title": "A list of environment variable settings for the task.",
          "description": "A list of environment variable settings for the task."
        },
        "affinityInfo": {
          "$ref": "#/definitions/AffinityInformation",
          "title": "A locality hint that can be used by the Batch service to select a compute node on which to start the new task.",
          "description": "A locality hint that can be used by the Batch service to select a compute node on which to start the new task."
        },
        "constraints": {
          "$ref": "#/definitions/TaskConstraints",
          "title": "The execution constraints that apply to this task.",
          "description": "The execution constraints that apply to this task."
        },
        "userIdentity": {
          "$ref": "#/definitions/UserIdentity",
          "title": "The user identity under which the task runs.",
          "description": "The user identity under which the task runs."
        },
        "multiInstanceSettings": {
          "$ref": "#/definitions/MultiInstanceSettings",
          "title": "An object that indicates that the task is a multi-instance task, and contains information about how to run the multi-instance task.",
          "description": "An object that indicates that the task is a multi-instance task, and contains information about how to run the multi-instance task."
        },
        "dependsOn": {
          "$ref": "#/definitions/TaskDependencies",
          "title": "The tasks that this task depends on.",
          "description": "The tasks that this task depends on."
        },
        "applicationPackageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackageReference"
          },
          "title": "A list of application packages that the Batch service will deploy to the compute node before running the command line.",
          "description": "A list of application packages that the Batch service will deploy to the compute node before running the command line."
        },
        "authenticationTokenSettings": {
          "title": "The settings for an authentication token that the task can use to perform Batch service operations.",
          "description": "The settings for an authentication token that the task can use to perform Batch service operations.",
          "$ref": "#/definitions/AuthenticationTokenSettings"
        },
        "packageReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PackageReference"
          },
          "title": "A collection of packages from external package managers to be added to the node where the task runs.",
          "description": "A collection of packages from external package managers to be added to the node where the task runs."
        }
      },
      "required": [
        "id",
        "commandLine"
      ],
      "title": "An Azure Batch task to add."
    },
    "TaskContainerSettings": {
      "properties": {
        "containerRunOptions": {
          "type": "string",
          "title": "Additional options to the container create command.",
          "description": "Additional options to the container create command."
        },
        "imageName": {
          "type": "string",
          "title": "The image to use to create the container in which the task will run.",
          "description": "The image to use to create the container in which the task will run."
        },
        "registry": {
          "$ref": "#/definitions/ContainerRegistry",
          "title": "The private registry which contains the container image.",
          "description": "The private registry which contains the container image."
        }
      },
      "required": [
        "imageName"
      ],
      "title": "The container settings for a task."
    },
    "ContainerRegistry": {
      "properties": {
        "registryServer": {
          "type": "string",
          "title": "The registry URL.",
          "description": "The registry URL."
        },
        "username": {
          "type": "string",
          "x-ms-client-name": "username",
          "title": "The user name to log into the registry server.",
          "description": "The user name to log into the registry server."
        },
        "password": {
          "type": "string",
          "title": "The password to log into the registry server.",
          "description": "The password to log into the registry server."
        }
      },
      "required": [
        "username",
        "password"
      ],
      "title": "A private container registry."
    },
    "ExitConditions": {
      "properties": {
        "exitCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExitCodeMapping"
          },
          "title": "A list of individual task exit codes and how the Batch service should respond to them.",
          "description": "A list of individual task exit codes and how the Batch service should respond to them."
        },
        "exitCodeRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExitCodeRangeMapping"
          },
          "title": "A list of task exit code ranges and how the Batch service should respond to them.",
          "description": "A list of task exit code ranges and how the Batch service should respond to them."
        },
        "preProcessingError": {
          "$ref": "#/definitions/ExitOptions",
          "title": "How the Batch service should respond if the task fails to start due to an error.",
          "description": "How the Batch service should respond if the task fails to start due to an error."
        },
        "fileUploadError": {
          "$ref": "#/definitions/ExitOptions",
          "title": "How the Batch service should respond if a file upload error occurs.",
          "description": "How the Batch service should respond if a file upload error occurs."
        },
        "default": {
          "$ref": "#/definitions/ExitOptions",
          "title": "How the Batch service should respond if the task fails with an exit condition not covered by any of the other properties.",
          "description": "How the Batch service should respond if the task fails with an exit condition not covered by any of the other properties."
        }
      },
      "title": "Specifies how the Batch service should respond when the task completes."
    },
    "ExitCodeMapping": {
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "A process exit code.",
          "description": "A process exit code."
        },
        "exitOptions": {
          "$ref": "#/definitions/ExitOptions",
          "title": "How the Batch service should respond if the task exits with this exit code.",
          "description": "How the Batch service should respond if the task exits with this exit code."
        }
      },
      "title": "How the Batch service should respond if a task exits with a particular exit code.",
      "required": [
        "code",
        "exitOptions"
      ]
    },
    "ExitOptions": {
      "properties": {
        "jobAction": {
          "type": "string",
          "title": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's onTaskFailed property is 'performExitOptionsJobAction'.",
          "description": "An action to take on the job containing the task, if the task completes with the given exit condition and the job's onTaskFailed property is 'performExitOptionsJobAction'.",
          "enum": [
            "none",
            "disable",
            "terminate"
          ],
          "x-ms-enum": {
            "name": "JobAction",
            "modelAsString": false,
            "values": [
              {
                "value": "none",
                "description": "Take no action."
              },
              {
                "value": "disable",
                "description": "Disable the job. This is equivalent to calling the disable job API, with a disableTasks value of requeue."
              },
              {
                "value": "terminate",
                "description": "Terminate the job. The terminateReason in the job's executionInfo is set to \"TaskFailed\"."
              }
            ]
          }
        },
        "dependencyAction": {
          "type": "string",
          "title": "An action that the Batch service performs on tasks that depend on this task.",
          "description": "An action that the Batch service performs on tasks that depend on this task.",
          "enum": [
            "satisfy",
            "block"
          ],
          "x-ms-enum": {
            "name": "DependencyAction",
            "modelAsString": false,
            "values": [
              {
                "value": "satisfy",
                "description": "Satisfy the task's dependencies."
              },
              {
                "value": "block",
                "description": "Block the task's dependencies."
              }
            ]
          }
        }
      },
      "title": "Specifies how the Batch service responds to a particular exit condition."
    },
    "ExitCodeRangeMapping": {
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "title": "The first exit code in the range.",
          "description": "The first exit code in the range."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "title": "The last exit code in the range.",
          "description": "The last exit code in the range."
        },
        "exitOptions": {
          "$ref": "#/definitions/ExitOptions",
          "title": "How the Batch service should respond if the task exits with an exit code in the range start to end (inclusive).",
          "description": "How the Batch service should respond if the task exits with an exit code in the range start to end (inclusive)."
        }
      },
      "title": "A range of exit codes and how the Batch service should respond to exit codes within that range.",
      "required": [
        "start",
        "end",
        "exitOptions"
      ]
    },
    "ResourceFile": {
      "properties": {
        "blobSource": {
          "type": "string",
          "title": "The URL of the file within Azure Blob Storage.",
          "description": "The URL of the file within Azure Blob Storage."
        },
        "filePath": {
          "type": "string",
          "title": "The location on the compute node to which to download the file, relative to the task's working directory.",
          "description": "The location on the compute node to which to download the file, relative to the task's working directory."
        },
        "fileMode": {
          "type": "string",
          "title": "The file permission mode attribute in octal format.",
          "description": "The file permission mode attribute in octal format."
        },
        "source": {
          "type": "object",
          "$ref": "#/definitions/ResourceFileSource",
          "title": "A source for files to be downloaded before running the task command line.",
          "description": "A source for files to be downloaded before running the task command line."
        }
      },
      "required": [],
      "title": "A file to be downloaded from Azure blob storage to a compute node.",
      "oneOf": [
        {
          "required": [
            "source"
          ]
        },
        {
          "required": [
            "blobSource"
          ]
        }
      ]
    },
    "ResourceFileSource": {
      "properties": {
        "fileGroup": {
          "type": "string",
          "title": "The file group in the linked storage account from which to download files.",
          "description": "The file group in the linked storage account from which to download files."
        },
        "prefix": {
          "type": "string",
          "title": "A prefix with which to filter the files to download.",
          "description": "A prefix with which to filter the files to download."
        }
      },
      "required": [
        "fileGroup"
      ]
    },
    "OutputFile": {
      "properties": {
        "filePattern": {
          "type": "string",
          "title": "A pattern indicating which file(s) to upload.",
          "description": "A pattern indicating which file(s) to upload."
        },
        "destination": {
          "title": "The destination for the output file(s).",
          "$ref": "#/definitions/OutputFileDestination",
          "description": "The destination for the output file(s)."
        },
        "uploadOptions": {
          "title": "Additional options for the upload operation, including under what conditions to perform the upload.",
          "$ref": "#/definitions/OutputFileUploadOptions",
          "description": "Additional options for the upload operation, including under what conditions to perform the upload."
        }
      },
      "required": [
        "filePattern",
        "destination",
        "uploadOptions"
      ],
      "title": "A specification for uploading files from an Azure Batch node to another location after the Batch service has finished executing the task process."
    },
    "OutputFileDestination": {
      "properties": {
        "container": {
          "title": "A location in Azure blob storage to which files are uploaded.",
          "$ref": "#/definitions/OutputFileBlobContainerDestination",
          "description": "A location in Azure blob storage to which files are uploaded."
        },
        "autoStorage": {
          "type": "object",
          "$ref": "#/definitions/OutputFileAutoStorageDestination",
          "title": "A destination in the linked storage account to which to persist output files.",
          "description": "A destination in the linked storage account to which to persist output files."
        }
      },
      "title": "The destination to which a file should be uploaded."
    },
    "OutputFileBlobContainerDestination": {
      "properties": {
        "path": {
          "type": "string",
          "title": "The destination blob or virtual directory within the Azure Storage container.",
          "description": "The destination blob or virtual directory within the Azure Storage container."
        },
        "containerUrl": {
          "type": "string",
          "title": "The URL of the container within Azure Blob Storage to which to upload the file(s).",
          "description": "The URL of the container within Azure Blob Storage to which to upload the file(s)."
        }
      },
      "required": [
        "containerUrl"
      ],
      "title": "Specifies a file upload destination within an Azure blob storage container."
    },
    "OutputFileAutoStorageDestination": {
      "properties": {
        "fileGroup": {
          "type": "string",
          "title": "The file group in the linked storage account to which to save files.",
          "description": "The file group in the linked storage account to which to save files."
        },
        "path": {
          "type": "string",
          "title": "The path within the file group to which output files will be uploaded.",
          "description": "The path within the file group to which output files will be uploaded."
        }
      },
      "required": [
        "fileGroup"
      ]
    },
    "OutputFileUploadOptions": {
      "properties": {
        "uploadCondition": {
          "title": "The conditions under which the task output file or set of files should be uploaded.",
          "description": "The conditions under which the task output file or set of files should be uploaded.",
          "$ref": "#/definitions/OutputFileUploadCondition"
        }
      },
      "required": [
        "uploadCondition"
      ],
      "title": "Details about an output file upload operation, including under what conditions to perform the upload."
    },
    "OutputFileUploadCondition": {
      "type": "string",
      "title": "The conditions under which a task output file or set of files should be uploaded.",
      "enum": [
        "tasksuccess",
        "taskfailure",
        "taskcompletion"
      ],
      "x-ms-enum": {
        "name": "OutputFileUploadCondition",
        "modelAsString": false,
        "values": [
          {
            "value": "tasksuccess",
            "description": "Upload the file(s) only after the task process exits with an exit code of 0.",
            "name": "taskSuccess"
          },
          {
            "value": "taskfailure",
            "description": "Upload the file(s) only after the task process exits with a nonzero exit code.",
            "name": "taskFailure"
          },
          {
            "value": "taskcompletion",
            "description": "Upload the file(s) after the task process exits, no matter what the exit code was.",
            "name": "taskCompletion"
          }
        ]
      }
    },
    "EnvironmentSetting": {
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the environment variable.",
          "description": "The name of the environment variable."
        },
        "value": {
          "type": "string",
          "title": "The value of the environment variable.",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "name"
      ],
      "title": "An environment variable to be set on a task process."
    },
    "AffinityInformation": {
      "properties": {
        "affinityId": {
          "type": "string",
          "title": "An opaque string representing the location of a compute node or a task that has run previously.",
          "description": "An opaque string representing the location of a compute node or a task that has run previously."
        }
      },
      "required": [
        "affinityId"
      ],
      "title": "A locality hint that can be used by the Batch service to select a compute node on which to start a task."
    },
    "TaskConstraints": {
      "properties": {
        "maxWallClockTime": {
          "type": "string",
          "format": "duration",
          "title": "The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.",
          "description": "The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it."
        },
        "retentionTime": {
          "type": "string",
          "format": "duration",
          "title": "The minimum time to retain the task directory on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the task directory and all its contents.",
          "description": "The minimum time to retain the task directory on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the task directory and all its contents."
        },
        "maxTaskRetryCount": {
          "type": "integer",
          "format": "int32",
          "title": "The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.",
          "description": "The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero."
        }
      },
      "title": "Execution constraints to apply to a task."
    },
    "UserIdentity": {
      "properties": {
        "username": {
          "type": "string",
          "x-ms-client-name": "username",
          "title": "The name of the user identity under which the task is run.",
          "description": "The name of the user identity under which the task is run."
        },
        "autoUser": {
          "$ref": "#/definitions/AutoUserSpecification",
          "title": "The auto user under which the task is run.",
          "description": "The auto user under which the task is run."
        }
      },
      "title": "The definition of the user identity under which the task is run.",
      "description": "Specify either the username or autoUser property, but not both."
    },
    "AutoUserSpecification": {
      "properties": {
        "scope": {
          "type": "string",
          "title": "The scope for the auto user",
          "description": "The scope for the auto user",
          "enum": [
            "task",
            "pool"
          ],
          "x-ms-enum": {
            "name": "AutoUserScope",
            "modelAsString": false,
            "values": [
              {
                "value": "task",
                "description": "Specifies that the service should create a new user for the task."
              },
              {
                "value": "pool",
                "description": "Specifies that the task runs as the common auto user account which is created on every node in a pool."
              }
            ]
          }
        },
        "elevationLevel": {
          "title": "The elevation level of the auto user.",
          "description": "The elevation level of the auto user.",
          "$ref": "#/definitions/ElevationLevel"
        }
      },
      "title": "Specifies the parameters for the auto user that runs a task on the Batch service."
    },
    "ElevationLevel": {
      "type": "string",
      "title": "The elevation level of the user.",
      "enum": [
        "nonadmin",
        "admin"
      ],
      "x-ms-enum": {
        "name": "ElevationLevel",
        "modelAsString": false,
        "values": [
          {
            "value": "nonadmin",
            "description": "The user is a standard user without elevated access.",
            "name": "nonAdmin"
          },
          {
            "value": "admin",
            "description": "The user is a user with elevated access and operates with full Administrator permissions."
          }
        ]
      }
    },
    "MultiInstanceSettings": {
      "properties": {
        "numberOfInstances": {
          "type": "integer",
          "format": "int32",
          "title": "The number of compute nodes required by the task.",
          "description": "The number of compute nodes required by the task."
        },
        "coordinationCommandLine": {
          "type": "string",
          "title": "The command line to run on all the compute nodes to enable them to coordinate when the primary runs the main task command.",
          "description": "The command line to run on all the compute nodes to enable them to coordinate when the primary runs the main task command."
        },
        "commonResourceFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFile"
          },
          "title": "A list of files that the Batch service will download before running the coordination command line.",
          "description": "A list of files that the Batch service will download before running the coordination command line."
        }
      },
      "required": [
        "coordinationCommandLine"
      ],
      "title": "Settings which specify how to run a multi-instance task.",
      "description": "Multi-instance tasks are commonly used to support MPI tasks."
    },
    "TaskDependencies": {
      "properties": {
        "taskIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "The list of task IDs that this task depends on. All tasks in this list must complete successfully before the dependent task can be scheduled.",
          "description": "The list of task IDs that this task depends on. All tasks in this list must complete successfully before the dependent task can be scheduled."
        },
        "taskIdRanges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskIdRange"
          },
          "title": "The list of task ID ranges that this task depends on. All tasks in all ranges must complete successfully before the dependent task can be scheduled.",
          "description": "The list of task ID ranges that this task depends on. All tasks in all ranges must complete successfully before the dependent task can be scheduled."
        }
      },
      "title": "Specifies any dependencies of a task. Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled."
    },
    "TaskIdRange": {
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "title": "The first task ID in the range.",
          "description": "The first task ID in the range."
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "title": "The last task ID in the range.",
          "description": "The last task ID in the range."
        }
      },
      "title": "A range of task IDs that a task can depend on. All tasks with IDs in the range must complete successfully before the dependent task can be scheduled.",
      "description": "The start and end of the range are inclusive. For example, if a range has start 9 and end 12, then it represents tasks '9', '10', '11' and '12'.",
      "required": [
        "start",
        "end"
      ]
    },
    "ApplicationPackageReference": {
      "properties": {
        "applicationId": {
          "type": "string",
          "title": "The ID of the application to deploy.",
          "description": "The ID of the application to deploy."
        },
        "version": {
          "type": "string",
          "title": "The version of the application to deploy. If omitted, the default version is deployed.",
          "description": "The version of the application to deploy. If omitted, the default version is deployed."
        }
      },
      "required": [
        "applicationId"
      ],
      "title": "A reference to an application package to be deployed to compute nodes."
    },
    "AuthenticationTokenSettings": {
      "properties": {
        "access": {
          "type": "array",
          "items": {
            "type": "string",
            "x-nullable": false,
            "enum": [
              "job"
            ],
            "x-ms-enum": {
              "name": "AccessScope",
              "modelAsString": false,
              "values": [
                {
                  "value": "job",
                  "description": "Grants access to perform all operations on the job containing the task."
                }
              ]
            }
          },
          "title": "The Batch resources to which the token grants access.",
          "description": "The Batch resources to which the token grants access."
        }
      },
      "title": "The settings for an authentication token that the task can use to perform Batch service operations."
    },
    "PackageReference": {
      "properties": {
        "type": {
          "type": "string",
          "title": "The type of package - aptPackage, chocolateyPackage, or yumPackage",
          "description": "The type of package - aptPackage, chocolateyPackage, or yumPackage"
        },
        "id": {
          "type": "string",
          "title": "The name or ID of the package to be installed as identified according to the package repository.",
          "description": "The name or ID of the package to be installed as identified according to the package repository."
        },
        "version": {
          "type": "string",
          "title": "The version of the package to be installed.",
          "description": "The version of the package to be installed."
        },
        "allowEmptyChecksums": {
          "type": "boolean",
          "title": "Whether Chocolatey will install packages without a checksum for validation.",
          "description": "Whether Chocolatey will install packages without a checksum for validation."
        },
        "disableExcludes": {
          "type": "string",
          "title": "Packages that might otherwise be excluded by VM configuration (e.g. kernel packages).",
          "description": "Packages that might otherwise be excluded by VM configuration (e.g. kernel packages)."
        }
      },
      "required": [
        "type",
        "id"
      ]
    }
  }
}
